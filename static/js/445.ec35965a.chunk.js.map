{"version":3,"file":"static/js/445.ec35965a.chunk.js","mappings":"qKAoBO,MAAMA,EAA0BC,IACrC,MAAM,SACJC,EAAQ,SACRC,EAAWC,EAAAA,GAAeC,OAAM,KAChCC,EAAOC,EAAAA,GAAWC,QAAO,KACzBC,EAAOC,EAAAA,GAAWC,OAAM,WACxBC,EAAU,QACVC,KACGC,GACDb,EAEJ,OACEc,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CACPb,SAAUA,EACVG,KAAMA,EACNG,KAAMA,EACNG,WAAYA,EACZC,QAASA,KACLC,EAAUZ,SAEbA,GACQ,C,qDCzCR,IAAKK,EAAU,SAAVA,GAAU,OAAVA,EAAU,sBAAVA,EAAU,kBAAVA,CAAU,MAKVH,EAAc,SAAdA,GAAc,OAAdA,EAAc,gBAAdA,EAAc,gBAAdA,EAAc,cAAdA,CAAc,MAMdM,EAAU,SAAVA,GAAU,OAAVA,EAAU,cAAVA,EAAU,gBAAVA,EAAU,cAAVA,CAAU,K,kICVtB,QAAyB,uB,aCczB,MA6BA,EA7BmBO,KACjB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAeC,EAAAA,IAE3BC,EAAQC,aAAaC,QAAQC,EAAAA,IAAoB,GAOvD,OACEb,EAAAA,EAAAA,KAAA,OAAKc,UAAWC,EAAc5B,SAC3BoB,GACCP,EAAAA,EAAAA,KAAA,KAAGc,UAAU,6BAA4B3B,SAAC,yDAE1C6B,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAA9B,SAAA,EACPa,EAAAA,EAAAA,KAAA,KAAGc,UAAU,6BAA4B3B,SAAC,qJAI1Ca,EAAAA,EAAAA,KAACf,EAAAA,EAAM,CAACa,QAfKoB,KACnBf,GAASgB,EAAAA,EAAAA,GAAO,CAAET,WAClBL,EAASe,EAAAA,GAAW,EAagBjC,SAAC,qDAG/B,C","sources":["components/button/button.tsx","components/button/types.ts","webpack://react-burger/./src/pages/profile-page/logout/logout.module.css?9465","pages/profile-page/logout/logout.tsx"],"sourcesContent":["import React, { FC, HTMLProps, ReactNode } from 'react'\n\nimport {\n  HtmlTypeButton,\n  SizeButton,\n  TypeButton,\n} from '@/components/button/types'\n\nimport { Button as YaButton } from '@ya.praktikum/react-developer-burger-ui-components'\n\ninterface ButtonProps\n  extends Omit<HTMLProps<HTMLButtonElement>, 'type' | 'size'> {\n  children: ReactNode\n  type?: TypeButton\n  htmlType?: HtmlTypeButton\n  size?: SizeButton\n  extraClass?: string\n  onClick?: () => void\n}\n\nexport const Button: FC<ButtonProps> = props => {\n  const {\n    children,\n    htmlType = HtmlTypeButton.BUTTON,\n    type = TypeButton.PRIMARY,\n    size = SizeButton.MEDIUM,\n    extraClass,\n    onClick,\n    ...otherProps\n  } = props\n\n  return (\n    <YaButton\n      htmlType={htmlType}\n      type={type}\n      size={size}\n      extraClass={extraClass}\n      onClick={onClick}\n      {...otherProps}\n    >\n      {children}\n    </YaButton>\n  )\n}\n","export enum TypeButton {\n  SECONDARY = 'secondary',\n  PRIMARY = 'primary',\n}\n\nexport enum HtmlTypeButton {\n  BUTTON = 'button',\n  SUBMIT = 'submit',\n  RESET = 'reset',\n}\n\nexport enum SizeButton {\n  SMALL = 'small',\n  MEDIUM = 'medium',\n  LARGE = 'large',\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"logout\":\"logout_logout__4xeIK\"};","import { FC, Fragment } from 'react'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport { useAppDispatch, useAppSelector } from '@/components/app/store/store'\nimport { Button } from '@/components/button/button'\n\nimport { logout } from '@/services/auth/logout'\nimport { getAuthLoading } from '@/services/auth/selectors'\n\nimport { refreshTokenKey } from '@/utils/api/constants'\nimport { logoutPath } from '@/utils/route-paths'\n\nimport styles from './logout.module.css'\n\nconst Logout: FC = () => {\n  const dispatch = useAppDispatch()\n  const navigate = useNavigate()\n  const isLoading = useAppSelector(getAuthLoading)\n\n  const token = localStorage.getItem(refreshTokenKey) || ''\n\n  const handleLogout = (): void => {\n    dispatch(logout({ token }))\n    navigate(logoutPath)\n  }\n\n  return (\n    <div className={styles.logout}>\n      {isLoading ? (\n        <p className=\"text text_type_main-medium\">Загрузка...</p>\n      ) : (\n        <Fragment>\n          <p className=\"text text_type_main-medium\">\n            Вы уверены что хотите выйти?\n          </p>\n\n          <Button onClick={handleLogout}>Да, выйти</Button>\n        </Fragment>\n      )}\n    </div>\n  )\n}\n\nexport default Logout\n"],"names":["Button","props","children","htmlType","HtmlTypeButton","BUTTON","type","TypeButton","PRIMARY","size","SizeButton","MEDIUM","extraClass","onClick","otherProps","_jsx","YaButton","Logout","dispatch","useAppDispatch","navigate","useNavigate","isLoading","useAppSelector","getAuthLoading","token","localStorage","getItem","refreshTokenKey","className","styles","_jsxs","Fragment","handleLogout","logout","logoutPath"],"sourceRoot":""}