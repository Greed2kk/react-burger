{"version":3,"file":"static/js/461.300f4696.chunk.js","mappings":"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","sources":["webpack://react-burger/./src/components/feed-items/feed-item/feed-ingredients/feed-ingredient/feed-ingredient.module.css?7403","components/feed-items/feed-item/feed-ingredients/feed-ingredient/feed-ingredient.tsx","webpack://react-burger/./src/components/feed-items/feed-item/feed-ingredients/feed-ingredients.module.css?f125","components/feed-items/feed-item/feed-ingredients/feed-ingredients.tsx","webpack://react-burger/./src/components/feed-items/feed-item/feed-item.module.css?355c","components/feed-items/feed-item/feed-item.tsx","webpack://react-burger/./src/components/feed-items/feed-items.module.css?6cf7","components/feed-items/feed-items.tsx","webpack://react-burger/./src/components/order-statuses/order-statuses.module.css?d604","components/order-statuses/order-statuses.tsx","webpack://react-burger/./src/pages/feed-page/feed-page.module.css?e9e1","pages/feed-page/feed-page.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"feedIngredient\":\"feed-ingredient_feedIngredient__fsyB6\",\"image\":\"feed-ingredient_image__zAUSF\",\"remain\":\"feed-ingredient_remain__dfP63\",\"count\":\"feed-ingredient_count__hVBUs\"};","import { FC } from 'react'\n\nimport classNames from 'classnames'\n\nimport { Ingredient } from '@/services/ingredients/types'\n\nimport styles from './feed-ingredient.module.css'\n\ninterface FeedIngredientProps {\n  ingredient: Ingredient\n  remain?: number\n}\n\nexport const FeedIngredient: FC<FeedIngredientProps> = ({\n  ingredient,\n  remain,\n}) => {\n  const {image, name} = ingredient\n\n  return (\n    <div className={styles.feedIngredient}>\n      {remain ? (\n        <div className={styles.remain}>\n          <img\n            className={styles.image}\n            src={image}\n            alt={name}\n          />\n\n          <span\n            className={classNames(styles.count, 'text text_type_main-default')}\n          >\n            {`+${remain}`}\n          </span>\n        </div>\n      ) : (\n        <img\n          className={styles.image}\n          src={image}\n          alt={name}\n        />\n      )}\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"feedIngredients\":\"feed-ingredients_feedIngredients__7vF7h\"};","import { FC } from 'react'\n\nimport { Ingredient } from '@/services/ingredients/types'\n\nimport { FeedIngredient } from './feed-ingredient/feed-ingredient'\n\nimport styles from './feed-ingredients.module.css'\n\ninterface FeedIngredientsProps {\n  ingredients: Ingredient[]\n}\n\nexport const FeedIngredients: FC<FeedIngredientsProps> = ({ ingredients }) => {\n  const remain = ingredients.length - 6\n\n  return (\n    <div className={styles.feedIngredients}>\n      {ingredients.map((ingredient, index) => {\n        if (ingredients.length >= 6) {\n          if (index === 5) {\n            return <FeedIngredient key={index} ingredient={ingredient} remain={remain} />\n          }\n\n          if (index >= 6) {\n            return null\n          }\n\n          return <FeedIngredient key={index} ingredient={ingredient} />\n        } else {\n          return <FeedIngredient key={index} ingredient={ingredient} />\n        }\n      })}\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"feedItem\":\"feed-item_feedItem__yuQs+\",\"itemSection\":\"feed-item_itemSection__ZMozu\",\"orderDate\":\"feed-item_orderDate__NmAQU\",\"orderPrice\":\"feed-item_orderPrice__wzttU\"};","import { FC, useMemo } from 'react'\n\nimport classNames from 'classnames'\nimport { useLocation, useNavigate } from 'react-router-dom'\n\nimport { useAppDispatch, useAppSelector } from '@/components/app/store/store'\n\nimport { Order } from '@/services/feed-orders/types'\nimport { getIngredientsByIds } from '@/services/ingredients/selectors'\nimport { addOrderCompositionData } from '@/services/order-composition/order-composition-slice'\n\nimport { getTotalPrice } from '@/utils/helpers/getTotalPrice'\nimport { feedPath, profileOrdersPath } from '@/utils/route-paths'\n\nimport { FeedIngredients } from './feed-ingredients/feed-ingredients'\n\nimport {\n  CurrencyIcon,\n  FormattedDate,\n} from '@ya.praktikum/react-developer-burger-ui-components'\n\nimport styles from './feed-item.module.css'\n\ninterface FeedItemProps {\n  order: Order\n  profile?: boolean\n}\n\nexport const FeedItem: FC<FeedItemProps> = ({ order, profile }) => {\n  const {\n    name,\n    ingredients: orderIngredients,\n    number,\n    createdAt,\n    status,\n  } = order\n  const location = useLocation()\n  const navigate = useNavigate()\n  const dispatch = useAppDispatch()\n\n  const ingredients = useAppSelector(getIngredientsByIds(orderIngredients))\n\n  const price = useMemo(() => getTotalPrice(ingredients), [ingredients])\n\n  const handleDetailsClick = (): void => {\n    const selection = window.getSelection()\n\n    if (selection && selection.toString().length > 0) {\n      return\n    }\n\n    dispatch(\n      addOrderCompositionData({\n        number,\n        name,\n        ingredients: orderIngredients,\n        status,\n        createdAt,\n      }),\n    )\n\n    if (profile) {\n      navigate(`${profileOrdersPath}/${number}`, {\n        state: { backgroundLocation: location },\n      })\n    } else {\n      navigate(`${feedPath}/${number}`, {\n        state: { backgroundLocation: location },\n      })\n    }\n\n\n  }\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div\n      className={classNames(styles.feedItem, 'p-6')}\n      onClick={handleDetailsClick}\n    >\n      <section className={classNames(styles.itemSection, 'mb-6')}>\n        <span className=\"text text_type_digits-default\">{`#${number}`}</span>\n        <span\n          className={classNames(\n            styles.orderDate,\n            'text text_type_main-default text_color_inactive',\n          )}\n        >\n          <FormattedDate date={new Date(createdAt)} />\n        </span>\n      </section>\n\n      <span className=\"text text_type_main-medium\">{name}</span>\n\n      <section className={classNames(styles.itemSection, 'mt-6')}>\n        <FeedIngredients ingredients={ingredients} />\n\n        <span className={classNames(styles.orderPrice)}>\n          <p className=\"text text_type_digits-default\">{price}</p>\n          <CurrencyIcon type=\"primary\" />\n        </span>\n      </section>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"feedItems\":\"feed-items_feedItems__fF8iT\"};","import { FC } from 'react'\n\nimport { Feed } from '@/services/feed-orders/types'\n\nimport { FeedItem } from './feed-item/feed-item'\n\nimport styles from './feed-items.module.css'\n\ninterface FeedItemsProps {\n  ordersData?: Feed\n  profile?: boolean\n}\n\nexport const FeedItems: FC<FeedItemsProps> = ({ ordersData, profile }) => {\n  const { orders = [] } = ordersData || {}\n\n  if (!orders.length) {\n    return <h1>Заказов нет</h1>\n  }\n\n  return (\n    <div className={styles.feedItems}>\n      {orders.map(order => {\n        if (!order.ingredients) {\n          return null\n        }\n\n        return <FeedItem order={order} key={order._id} profile={profile} />\n      })}\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"orderStatuses\":\"order-statuses_orderStatuses__tgWUb\",\"orderProgress\":\"order-statuses_orderProgress__XmaCp\",\"orderList\":\"order-statuses_orderList__qNNkv\",\"orderListItem\":\"order-statuses_orderListItem__5966i\",\"orderDone\":\"order-statuses_orderDone__DnXpc\"};","import { FC, useMemo } from 'react'\n\nimport classNames from 'classnames'\n\nimport { Feed } from '@/services/feed-orders/types'\n\nimport styles from './order-statuses.module.css'\n\ninterface OrderStatusesProps {\n  ordersData?: Feed\n}\n\nexport const OrderStatuses: FC<OrderStatusesProps> = ({ ordersData }) => {\n  const { total, totalToday, orders = [] } = ordersData || {}\n\n  const done = useMemo(\n    () =>\n      [...orders]\n        .sort(\n          (a, b) =>\n            new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime(),\n        )\n        .filter(({ status }) => status === 'done')\n        .map(({ number }) => number)\n        .slice(0, 10),\n    [orders],\n  )\n\n  const workInProgress = useMemo(\n    () =>\n      [...orders]\n        .sort(\n          (a, b) =>\n            new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime(),\n        )\n        .filter(({ status }) => status === 'created' || status === 'pending')\n        .map(({ number }) => number)\n        .slice(0, 14),\n    [orders],\n  )\n\n  return (\n    <div className={styles.orderStatuses}>\n      <section className={styles.orderProgress}>\n        <div>\n          <p className=\"text text_type_main-medium mb-6\">Готовы:</p>\n          <ul className={styles.orderList}>\n            {done &&\n              done.map(order => (\n                <li\n                  className={classNames(\n                    styles.orderDone,\n                    'text text_type_digits-default',\n                  )}\n                  key={order}\n                >\n                  {order}\n                </li>\n              ))}\n          </ul>\n        </div>\n        <div>\n          <p className=\"text text_type_main-medium mb-6\">В работе:</p>\n          <ul className={styles.orderList}>\n            {workInProgress &&\n              workInProgress.map(order => (\n                <li className=\"text text_type_digits-default\" key={order}>\n                  {order}\n                </li>\n              ))}\n          </ul>\n        </div>\n      </section>\n\n      <section>\n        <p className=\"text text_type_main-medium\">Выполнено за все время:</p>\n\n        <p className=\"text text_type_digits-large\">{total}</p>\n      </section>\n\n      <section>\n        <p className=\"text text_type_main-medium\">Выполнено за сегодня:</p>\n\n        <p className=\"text text_type_digits-large\">{totalToday}</p>\n      </section>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"feedPage\":\"feed-page_feedPage__+tpGN\"};","import { FC, useEffect } from 'react'\n\nimport classNames from 'classnames'\n\nimport {\n  RootState,\n  useAppDispatch,\n  useAppSelector,\n} from '@/components/app/store/store'\nimport { ContentWrapper } from '@/components/content-wrapper/content-wrapper'\nimport { FeedItems } from '@/components/feed-items/feed-items'\nimport { OrderStatuses } from '@/components/order-statuses/order-statuses'\n\nimport { feedOrdersWebSocketActions } from '@/services/feed-orders/actions'\nimport { fetchIngredients } from '@/services/ingredients/fetch-ingredients'\nimport { getIngredients } from '@/services/ingredients/selectors'\nimport { IngredientType } from '@/services/ingredients/types'\n\nimport { wsFeedOrdersPath } from '@/utils/route-paths'\n\nimport styles from './feed-page.module.css'\n\nconst FeedPage: FC = () => {\n  const dispatch = useAppDispatch()\n\n  const feed = useAppSelector((state: RootState) => state.feedOrders.feed)\n\n  useEffect(() => {\n    dispatch(feedOrdersWebSocketActions.connect(wsFeedOrdersPath))\n\n    return () => {\n      dispatch(feedOrdersWebSocketActions.disconnect())\n    }\n  }, [dispatch])\n\n  const ingredientsData = useAppSelector(getIngredients)\n\n  useEffect(() => {\n    if (!ingredientsData[IngredientType.MAIN].length)\n      dispatch(fetchIngredients())\n  }, [dispatch, ingredientsData])\n\n  if (!feed.success) {\n    return <h1>Загрузка</h1>\n  }\n\n  if (!feed.orders.length) {\n    return <h1>Заказов нет</h1>\n  }\n\n  return (\n    <ContentWrapper className=\"pl-5 pr-5\">\n      <h1 className=\"text text_type_main-large mb-5 mt-10\">Лента заказов</h1>\n\n      <ContentWrapper className={classNames(styles.feedPage)}>\n        <FeedItems ordersData={feed} />\n\n        <OrderStatuses ordersData={feed} />\n      </ContentWrapper>\n    </ContentWrapper>\n  )\n}\n\nexport default FeedPage\n"],"names":["FeedIngredient","_ref","ingredient","remain","image","name","_jsx","className","styles","children","_jsxs","src","alt","classNames","FeedIngredients","ingredients","length","map","index","FeedItem","order","profile","orderIngredients","number","createdAt","status","location","useLocation","navigate","useNavigate","dispatch","useAppDispatch","useAppSelector","getIngredientsByIds","price","useMemo","getTotalPrice","onClick","handleDetailsClick","selection","window","getSelection","toString","addOrderCompositionData","profileOrdersPath","feedPath","state","backgroundLocation","FormattedDate","date","Date","CurrencyIcon","type","FeedItems","ordersData","orders","_id","OrderStatuses","total","totalToday","done","sort","a","b","getTime","filter","_ref2","_ref3","slice","workInProgress","_ref4","_ref5","FeedPage","feed","feedOrders","useEffect","feedOrdersWebSocketActions","connect","wsFeedOrdersPath","disconnect","ingredientsData","getIngredients","IngredientType","MAIN","fetchIngredients","success","ContentWrapper"],"sourceRoot":""}