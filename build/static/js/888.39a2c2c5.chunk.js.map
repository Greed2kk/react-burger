{"version":3,"file":"static/js/888.39a2c2c5.chunk.js","mappings":"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","sources":["webpack://react-burger/./src/components/auth/auth-actions/auth-actions.module.css?4a96","components/auth/auth-actions/auth-actions.tsx","webpack://react-burger/./src/components/auth/auth-form/auth-form.module.css?b098","components/auth/auth-form/auth-form.tsx","components/button/button.tsx","components/button/types.ts","webpack://react-burger/./src/pages/forgot-password-page/forgot-password-page.module.css?c7be","pages/forgot-password-page/forgot-password-page.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"authActions\":\"auth-actions_authActions__G+3LS\",\"authAction\":\"auth-actions_authAction__6e1pB\",\"resetPadding\":\"auth-actions_resetPadding__lgxBR\"};","import { FC } from 'react'\n\nimport { Button } from '@/components/button/button'\nimport {\n  HtmlTypeButton,\n  SizeButton,\n  TypeButton,\n} from '@/components/button/types'\n\nimport styles from './auth-actions.module.css'\n\ntype AuthAction = {\n  text: string\n  action: {\n    text: string\n    onClick: () => void\n  }\n}\n\ninterface AuthActionsProps {\n  actions: AuthAction[]\n}\n\nconst AuthActions: FC<AuthActionsProps> = ({ actions }) => (\n  <section className={styles.authActions}>\n    {actions.map(({ text, action }, index) => (\n      <span className={styles.authAction} key={index}>\n        <p className=\"text text_type_main-default text_color_inactive\">\n          {text}\n        </p>\n\n        <Button\n          htmlType={HtmlTypeButton.BUTTON}\n          type={TypeButton.SECONDARY}\n          size={SizeButton.MEDIUM}\n          extraClass={styles.resetPadding}\n          onClick={action.onClick}\n        >\n          {action.text}\n        </Button>\n      </span>\n    ))}\n  </section>\n)\n\nexport default AuthActions\n","// extracted by mini-css-extract-plugin\nexport default {\"authForm\":\"auth-form_authForm__gq-Cw\",\"actions\":\"auth-form_actions__Zsucr\"};","import { FC, FormEvent, ReactNode } from 'react'\n\nimport classNames from 'classnames'\n\nimport { Button } from '@/components/button/button'\nimport { HtmlTypeButton, TypeButton } from '@/components/button/types'\n\nimport styles from './auth-form.module.css'\n\ninterface AuthFormProps {\n  children: ReactNode\n  title?: string\n  onSubmit: () => void\n  onCancel?: () => void\n  submitText?: string\n  cancelText?: string\n  displayActions?: boolean\n  isLoading?: boolean\n}\n\nconst AuthForm: FC<AuthFormProps> = ({\n  children,\n  title,\n  onSubmit,\n  submitText,\n  onCancel,\n  cancelText,\n  displayActions = true,\n  isLoading = false,\n}) => {\n  const handleSubmit = (e: FormEvent): void => {\n    e.preventDefault()\n\n    onSubmit()\n  }\n\n  const handleCancel = (): void => {\n    onCancel && onCancel()\n  }\n\n  return (\n    <form\n      className={classNames(styles.authForm, 'mb-20')}\n      onSubmit={handleSubmit}\n      method=\"POST\"\n      noValidate\n    >\n      {title && <p className=\"text text_type_main-medium mb-6\">{title}</p>}\n      {children}\n\n      {displayActions && (\n        <div className={styles.actions}>\n          {cancelText && (\n            <Button\n              htmlType={HtmlTypeButton.BUTTON}\n              type={TypeButton.SECONDARY}\n              onClick={handleCancel}\n            >\n              {cancelText}\n            </Button>\n          )}\n\n          <Button htmlType={HtmlTypeButton.SUBMIT} disabled={isLoading}>\n            {submitText}\n          </Button>\n        </div>\n      )}\n    </form>\n  )\n}\n\nexport default AuthForm\n","import React, { FC, HTMLProps, ReactNode } from 'react'\n\nimport {\n  HtmlTypeButton,\n  SizeButton,\n  TypeButton,\n} from '@/components/button/types'\n\nimport { Button as YaButton } from '@ya.praktikum/react-developer-burger-ui-components'\n\ninterface ButtonProps\n  extends Omit<HTMLProps<HTMLButtonElement>, 'type' | 'size'> {\n  children: ReactNode\n  type?: TypeButton\n  htmlType?: HtmlTypeButton\n  size?: SizeButton\n  extraClass?: string\n  onClick?: () => void\n}\n\nexport const Button: FC<ButtonProps> = props => {\n  const {\n    children,\n    htmlType = HtmlTypeButton.BUTTON,\n    type = TypeButton.PRIMARY,\n    size = SizeButton.MEDIUM,\n    extraClass,\n    onClick,\n    ...otherProps\n  } = props\n\n  return (\n    <YaButton\n      htmlType={htmlType}\n      type={type}\n      size={size}\n      extraClass={extraClass}\n      onClick={onClick}\n      {...otherProps}\n    >\n      {children}\n    </YaButton>\n  )\n}\n","export enum TypeButton {\n  SECONDARY = 'secondary',\n  PRIMARY = 'primary',\n}\n\nexport enum HtmlTypeButton {\n  BUTTON = 'button',\n  SUBMIT = 'submit',\n  RESET = 'reset',\n}\n\nexport enum SizeButton {\n  SMALL = 'small',\n  MEDIUM = 'medium',\n  LARGE = 'large',\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tip\":\"forgot-password-page_tip__f-n4o\"};","import { ChangeEvent, FC, Fragment, useState } from 'react'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport { useAppSelector } from '@/components/app/store/store'\nimport AuthActions from '@/components/auth/auth-actions/auth-actions'\nimport AuthForm from '@/components/auth/auth-form/auth-form'\nimport { Button } from '@/components/button/button'\n\nimport { getResetPasswordEmail } from '@/services/auth/selectors'\n\nimport { forgotPasswordPath, resetPasswordEmail } from '@/utils/api/constants'\nimport { api } from '@/utils/api/request'\nimport { loginPath } from '@/utils/route-paths'\n\nimport { EmailInput } from '@ya.praktikum/react-developer-burger-ui-components'\n\nimport styles from './forgot-password-page.module.css'\n\nconst ForgotPasswordPage: FC = () => {\n  const navigate = useNavigate()\n  const [email, setEmail] = useState('')\n  const [disable, setDisable] = useState(false)\n  const [validError, setValidError] = useState(false)\n  const [emailSent, setEmailSent] = useState(false)\n\n  const resetEmail = useAppSelector(getResetPasswordEmail)\n\n  const onSubmit = (): void => {\n    if (!validError && email) {\n      setDisable(true)\n\n      api.post(forgotPasswordPath, { email }).then(() => {\n        localStorage.setItem(resetPasswordEmail, email)\n        setDisable(false)\n        setEmailSent(true)\n        setEmail('')\n      })\n    }\n  }\n\n  const resendEmail = (): void => {\n    setDisable(false)\n    setValidError(false)\n    setEmailSent(false)\n  }\n\n  const validationHandler = (isValid: boolean): void => {\n    setValidError(!isValid)\n  }\n\n  const toLogin = (): void => {\n    navigate(loginPath)\n  }\n\n  const handleEmailChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setEmail(e.target.value)\n    setValidError(false)\n  }\n\n  return (\n    <Fragment>\n      {emailSent ? (\n        <div className={styles.tip}>\n          <p className=\"text text_type_main-default\">\n            Письмо отправлено на почту\n          </p>\n          <p className=\"text text_type_main-medium mt-4\">\n            {email || resetEmail}\n          </p>\n\n          <Button extraClass=\"mt-4 mb-15\" onClick={resendEmail}>\n            Указать другую почту?\n          </Button>\n        </div>\n      ) : (\n        <AuthForm\n          title=\"Восстановление пароля\"\n          onSubmit={onSubmit}\n          submitText=\"Восстановить\"\n          isLoading={disable || !email || validError}\n        >\n          <EmailInput\n            disabled={disable}\n            onChange={handleEmailChange}\n            value={email}\n            name=\"email\"\n            isIcon={false}\n            extraClass=\"mb-6\"\n            errorText=\"Неправильный адрес\"\n            checkValid={validationHandler}\n          />\n        </AuthForm>\n      )}\n\n      <AuthActions\n        actions={[\n          {\n            text: 'Вспомнили пароль?',\n            action: {\n              text: 'Войти',\n              onClick: toLogin,\n            },\n          },\n        ]}\n      />\n    </Fragment>\n  )\n}\n\nexport default ForgotPasswordPage\n"],"names":["_ref","actions","_jsx","className","styles","children","map","_ref2","index","text","action","_jsxs","Button","htmlType","HtmlTypeButton","BUTTON","type","TypeButton","SECONDARY","size","SizeButton","MEDIUM","extraClass","onClick","title","onSubmit","submitText","onCancel","cancelText","displayActions","isLoading","classNames","e","preventDefault","method","noValidate","handleCancel","SUBMIT","disabled","props","PRIMARY","otherProps","YaButton","ForgotPasswordPage","navigate","useNavigate","email","setEmail","useState","disable","setDisable","validError","setValidError","emailSent","setEmailSent","resetEmail","useAppSelector","getResetPasswordEmail","Fragment","resendEmail","AuthForm","api","post","forgotPasswordPath","then","localStorage","setItem","resetPasswordEmail","EmailInput","onChange","target","value","name","isIcon","errorText","checkValid","isValid","AuthActions","toLogin","loginPath"],"sourceRoot":""}